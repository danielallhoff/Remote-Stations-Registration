//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Cliente.SubscribeService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubscribeSoap11Binding", Namespace="http://master")]
    public partial class Subscribe : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback notificarOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerNotificacionesOperationCompleted;
        
        private System.Threading.SendOrPostCallback mainOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Subscribe() {
            this.Url = global::Cliente.Properties.Settings.Default.Cliente_SubscribeService_Subscribe;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event notificarCompletedEventHandler notificarCompleted;
        
        /// <remarks/>
        public event obtenerNotificacionesCompletedEventHandler obtenerNotificacionesCompleted;
        
        /// <remarks/>
        public event mainCompletedEventHandler mainCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:notificar", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string notificar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nombreEstacion, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string propiedad, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string min, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string max) {
            object[] results = this.Invoke("notificar", new object[] {
                        nombreEstacion,
                        propiedad,
                        val,
                        min,
                        max});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void notificarAsync(string nombreEstacion, string propiedad, string val, string min, string max) {
            this.notificarAsync(nombreEstacion, propiedad, val, min, max, null);
        }
        
        /// <remarks/>
        public void notificarAsync(string nombreEstacion, string propiedad, string val, string min, string max, object userState) {
            if ((this.notificarOperationCompleted == null)) {
                this.notificarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotificarOperationCompleted);
            }
            this.InvokeAsync("notificar", new object[] {
                        nombreEstacion,
                        propiedad,
                        val,
                        min,
                        max}, this.notificarOperationCompleted, userState);
        }
        
        private void OnnotificarOperationCompleted(object arg) {
            if ((this.notificarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notificarCompleted(this, new notificarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:obtenerNotificaciones", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string obtenerNotificaciones() {
            object[] results = this.Invoke("obtenerNotificaciones", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerNotificacionesAsync() {
            this.obtenerNotificacionesAsync(null);
        }
        
        /// <remarks/>
        public void obtenerNotificacionesAsync(object userState) {
            if ((this.obtenerNotificacionesOperationCompleted == null)) {
                this.obtenerNotificacionesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerNotificacionesOperationCompleted);
            }
            this.InvokeAsync("obtenerNotificaciones", new object[0], this.obtenerNotificacionesOperationCompleted, userState);
        }
        
        private void OnobtenerNotificacionesOperationCompleted(object arg) {
            if ((this.obtenerNotificacionesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerNotificacionesCompleted(this, new obtenerNotificacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:main", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void main([System.Xml.Serialization.XmlElementAttribute("args", IsNullable=true)] string[] args) {
            this.Invoke("main", new object[] {
                        args});
        }
        
        /// <remarks/>
        public void mainAsync(string[] args) {
            this.mainAsync(args, null);
        }
        
        /// <remarks/>
        public void mainAsync(string[] args, object userState) {
            if ((this.mainOperationCompleted == null)) {
                this.mainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmainOperationCompleted);
            }
            this.InvokeAsync("main", new object[] {
                        args}, this.mainOperationCompleted, userState);
        }
        
        private void OnmainOperationCompleted(object arg) {
            if ((this.mainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void notificarCompletedEventHandler(object sender, notificarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class notificarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal notificarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void obtenerNotificacionesCompletedEventHandler(object sender, obtenerNotificacionesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerNotificacionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerNotificacionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void mainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591